- name: "stop {{ container_name }} service"
  systemd:
    name: "{{container_name}}"
    state: stopped
    enabled: yes
  when: ansible_facts.services["{{ container_name }}.service"] is defined

- name: "pull das letsencrypt nginx proxy image"
  podman_image:
    name: '{{container_image}}'

- name: "Create  the letsencrypt nginx proxy volume directory"
  file:
    path: /srv/proxy2
    state: directory
    mode: '0755'


- name: "create systemd service file for container: {{ container_name }}"
  template:
    src: systemd-service-single.j2
    dest: "/etc/systemd/system/{{container_name}}.service"
    owner: root
    group: root
    mode: 0644
    force: yes
  notify: reload systemctl

- name: "start {{ container_name }} service"
  systemd:
    name: "{{container_name}}"
    state: restarted
    enabled: yes

- name: "print debug message"
  debug:
    var: "nextcloud_ip.stdout"

- name: Wait until the file /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf.sample is present before continuing
  wait_for:
    path: /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf.sample

- name: "copy nextcloud proxy file"
  copy:
    src: /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf.sample
    dest: /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf
    remote_src: true
- name: "replace nextcloud ip in proxy configuration"
  lineinfile:
    path: /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf
    regexp: 'server_name nextcloud.*;'
    line: 'server_name next.*;'
- name: "replace nextcloud ip in proxy configuration"
  lineinfile:
    path: /srv/proxy2/nginx/proxy-confs/nextcloud.subdomain.conf
    regexp: '^\s*set \$upstream_app nextcloud;'
    line: "       set $upstream_app {{nextcloud_ip.stdout}};"

- name: "start {{ container_name }} service"
  systemd:
    name: "{{container_name}}"
    state: restarted
    enabled: yes